{"version":3,"sources":["Components/Layout/Header/index.js","Components/Layout/index.js","Pages/Home/index.js","Config/router.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginHeader","marginTop","Index","date","handleThemeChange","classes","useState","darkState","setDarkState","className","AppBar","position","Toolbar","variant","Grid","container","spacing","item","xs","Typography","color","align","IconButton","onClick","children","palletType","mainPrimaryColor","grey","lightGreen","mainSecondaryColor","deepOrange","deepPurple","createMuiTheme","typography","fontFamily","join","palette","type","primary","main","secondary","ThemeProvider","CssBaseline","val","Container","paper","padding","textAlign","routes","path","component","useEffect","callAPI","today","setToday","a","axios","get","data","console","log","UpdateDate","href","Source","target","sm","Paper","Confirmed","NewConfirmed","NewDeaths","NewRecovered","App","map","route","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f7e4160.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Grid } from \"@material-ui/core\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    marginHeader: {\n        marginTop: 7,\n    }\n}));\n\nexport default function Index({ date, handleThemeChange }) {\n    const classes = useStyles();\n    const [darkState, setDarkState] = useState(false);\n    const handleClick = () => {\n        setDarkState(!darkState);\n        handleThemeChange(darkState);\n    };\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Typography className={classes.marginHeader} variant=\"h6\" color=\"inherit\">\n                                อัพเดตผู้ป่วยโควิด 19 ใหม่ในไทย\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography align=\"right\">\n                                <IconButton onClick={handleClick}>{darkState ? <BrightnessHighIcon /> : <Brightness4Icon />}</IconButton>\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import Header from \"./Header\";\nimport Container from \"@material-ui/core/Container\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { useState } from \"react\";\nimport { orange, lightBlue, deepPurple, deepOrange, grey, blueGrey, lightGreen } from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nexport default function Index({ children, date = null }) {\n    const [darkState, setDarkState] = useState(false);\n    const palletType = darkState ? \"dark\" : \"light\";\n    const mainPrimaryColor = darkState ? grey[800] : lightGreen[800];\n    const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n\n    const theme = createMuiTheme({\n        typography: {\n            fontFamily: [\"Krub\"].join(\",\"),\n        },\n        palette: {\n            type: palletType,\n            primary: {\n                main: mainPrimaryColor,\n            },\n            secondary: {\n                main: mainSecondaryColor,\n            },\n        },\n    });\n    const handleThemeChange = (val) => {\n        setDarkState(!val);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header date={date} handleThemeChange={handleThemeChange} />\n            <Container>{children}</Container>\n        </ThemeProvider>\n    );\n}\n","import { Box, CssBaseline, Grid, IconButton, Paper, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../Components/Layout\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    marginTop: {\n        marginTop: 7,\n    }\n}));\n\nexport default function Index() {\n    const classes = useStyles();\n    useEffect(() => {\n        callAPI();\n    }, []);\n    const [today, setToday] = useState(\"\");\n    const callAPI = async () => {\n        const { data } = await axios.get(\"https://covid19.th-stat.com/api/open/today\");\n        await setToday(data);\n        console.log(today);\n    };\n\n    return (\n        <Layout date={today?.UpdateDate}>\n            <CssBaseline />\n            <>\n                {today && (\n                    <div className={classes.root}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} className={classes.marginTop}>\n                                <Typography align=\"right\">ข้อมูลวันที่ : {today.UpdateDate}</Typography>\n                                <Typography variant=\"subtitle2\" align=\"right\">\n                                    ข้อมูลจาก :\n                                    <a href={today.Source} color=\"inherit\" target=\"_blank\">\n                                        {today.Source}\n                                    </a>\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={6} sm={3}>\n                                <Paper className={classes.paper}>\n                                    <Typography>จำนวนผู้ติดเชื้อสะสมทั้งหมด</Typography>\n                                    <Typography variant=\"h3\">{today.Confirmed}</Typography>\n                                </Paper>\n                            </Grid>\n\n                            <Grid item xs={6} sm={3}>\n                                <Paper className={classes.paper}>\n                                    <Typography>จำนวนผู้ติดเชื้อรายใหม่</Typography>\n                                    <Typography variant=\"h3\">{today.NewConfirmed}</Typography>\n                                </Paper>\n                            </Grid>\n\n                            <Grid item xs={6} sm={3}>\n                                <Paper className={classes.paper}>\n                                    <Typography>จำนวนผู้เสียชีวิต</Typography>\n                                    <Typography variant=\"h3\">{today.NewDeaths}</Typography>\n                                </Paper>\n                            </Grid>\n\n                            <Grid item xs={6} sm={3}>\n                                <Paper className={classes.paper}>\n                                    <Typography>จำนวนผู้ป่วยที่รักษาหาย</Typography>\n                                    <Typography variant=\"h3\">{today.NewRecovered}</Typography>\n                                </Paper>\n                            </Grid>\n\n                        </Grid>\n                    </div>\n                )}\n            </>\n        </Layout>\n    );\n}\n","import Index from '../Pages/Home';\nconst routes =[\n    {\n      path:'/',\n      component: Index\n    }\n  ]\n\n  export default routes\n","import { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"./Config/router\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                {routes.map((route, index) => (\n                    <Route key={index} path={route.path} component={route.component} />\n                ))}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}